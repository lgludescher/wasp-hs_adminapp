"""sync models with latest schema

Revision ID: fbfc0d469e15
Revises: 682044f85ad3
Create Date: 2025-05-16 17:17:52.890134

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fbfc0d469e15'
down_revision: Union[str, None] = '682044f85ad3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('academic_branches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('branch', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course_terms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('season', sa.Enum('SPRING', 'SUMMER', 'FALL', 'WINTER', name='season_enum'), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('decision_letters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entity_type', sa.Enum('PERSON_ROLE', 'PROJECT', 'COURSE', name='entity_type_enum'), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('link', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('grad_school_activity_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('institutions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('institution', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('people',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_people_email'), 'people', ['email'], unique=True)
    op.create_table('project_call_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('researcher_titles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('RESEARCHER', 'PHD_STUDENT', 'POSTDOC', name='role_type_enum'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('role')
    )
    op.create_table('academic_fields',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('field', sa.String(), nullable=False),
    sa.Column('branch_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['branch_id'], ['academic_branches.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('grad_school_activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('activity_type_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['activity_type_id'], ['grad_school_activity_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('people_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['people.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('call_type_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('project_number', sa.String(), nullable=False),
    sa.Column('is_affiliated', sa.Boolean(), nullable=True),
    sa.Column('is_extended', sa.Boolean(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['call_type_id'], ['project_call_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('course_term_id', sa.Integer(), nullable=True),
    sa.Column('grad_school_activity_id', sa.Integer(), nullable=True),
    sa.Column('credit_points', sa.Integer(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.CheckConstraint('(course_term_id IS NOT NULL) != (grad_school_activity_id IS NOT NULL)', name='ck_course_term_xor_grad_activity'),
    sa.ForeignKeyConstraint(['course_term_id'], ['course_terms.id'], ),
    sa.ForeignKeyConstraint(['grad_school_activity_id'], ['grad_school_activities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('person_fields',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('person_role_id', sa.Integer(), nullable=False),
    sa.Column('field_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['field_id'], ['academic_fields.id'], ),
    sa.ForeignKeyConstraint(['person_role_id'], ['people_roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('person_institutions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('person_role_id', sa.Integer(), nullable=False),
    sa.Column('institution_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.CheckConstraint('end_date IS NULL OR end_date >= start_date', name='ck_person_institution_dates'),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.ForeignKeyConstraint(['person_role_id'], ['people_roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('person_projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('person_role_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('is_principal_investigator', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['person_role_id'], ['people_roles.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('phd_students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('person_role_id', sa.Integer(), nullable=False),
    sa.Column('cohort_number', sa.Integer(), nullable=True),
    sa.Column('is_affiliated', sa.Boolean(), nullable=True),
    sa.Column('department', sa.String(), nullable=True),
    sa.Column('discipline', sa.String(), nullable=True),
    sa.Column('phd_project_title', sa.String(), nullable=True),
    sa.Column('planned_defense_date', sa.DateTime(), nullable=True),
    sa.Column('is_graduated', sa.Boolean(), nullable=True),
    sa.Column('current_title', sa.String(), nullable=True),
    sa.Column('current_organization', sa.String(), nullable=True),
    sa.Column('link', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['person_role_id'], ['people_roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('postdocs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('person_role_id', sa.Integer(), nullable=False),
    sa.Column('cohort_number', sa.Integer(), nullable=True),
    sa.Column('department', sa.String(), nullable=True),
    sa.Column('discipline', sa.String(), nullable=True),
    sa.Column('postdoc_project_title', sa.String(), nullable=True),
    sa.Column('current_title_id', sa.Integer(), nullable=True),
    sa.Column('current_title_other', sa.String(), nullable=True),
    sa.Column('current_institution_id', sa.Integer(), nullable=True),
    sa.Column('current_institution_other', sa.String(), nullable=True),
    sa.Column('current_department', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['current_institution_id'], ['institutions.id'], ),
    sa.ForeignKeyConstraint(['current_title_id'], ['researcher_titles.id'], ),
    sa.ForeignKeyConstraint(['person_role_id'], ['people_roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_fields',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('field_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['field_id'], ['academic_fields.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('research_output_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('link', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('researchers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('person_role_id', sa.Integer(), nullable=False),
    sa.Column('title_id', sa.Integer(), nullable=False),
    sa.Column('original_title_id', sa.Integer(), nullable=True),
    sa.Column('link', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['original_title_id'], ['researcher_titles.id'], ),
    sa.ForeignKeyConstraint(['person_role_id'], ['people_roles.id'], ),
    sa.ForeignKeyConstraint(['title_id'], ['researcher_titles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supervisors_phd_students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('supervisor_role_id', sa.Integer(), nullable=False),
    sa.Column('student_role_id', sa.Integer(), nullable=False),
    sa.Column('is_main', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['student_role_id'], ['people_roles.id'], ),
    sa.ForeignKeyConstraint(['supervisor_role_id'], ['people_roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('courses_institutions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('institution_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('courses_teachers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('person_role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['person_role_id'], ['people_roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('course_id', 'person_role_id', name='uq_course_teacher')
    )
    op.create_table('phd_students_courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('phd_student_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('grade', sa.Enum('PASS', 'FAIL', name='grade_type_enum'), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['phd_student_id'], ['phd_students.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phd_student_id', 'course_id', name='uq_student_course')
    )
    op.create_table('student_activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('phd_student_id', sa.Integer(), nullable=False),
    sa.Column('activity_type', sa.Enum('GRAD_SCHOOL', 'ABROAD', name='activity_type_enum'), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('grade', sa.Enum('PASS', 'FAIL', name='grade_type_enum'), nullable=True),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('country', sa.String(), nullable=False),
    sa.Column('host_institution', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['phd_student_id'], ['phd_students.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phd_student_id', 'activity_type', 'activity_id', name='uq_student_activity')
    )
    op.add_column('users', sa.Column('name', sa.String(), nullable=False))
    op.add_column('users', sa.Column('email', sa.String(), nullable=False))
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_column('users', 'email')
    op.drop_column('users', 'name')
    op.drop_table('student_activities')
    op.drop_table('phd_students_courses')
    op.drop_table('courses_teachers')
    op.drop_table('courses_institutions')
    op.drop_table('supervisors_phd_students')
    op.drop_table('researchers')
    op.drop_table('research_output_reports')
    op.drop_table('project_fields')
    op.drop_table('postdocs')
    op.drop_table('phd_students')
    op.drop_table('person_projects')
    op.drop_table('person_institutions')
    op.drop_table('person_fields')
    op.drop_table('courses')
    op.drop_table('projects')
    op.drop_table('people_roles')
    op.drop_table('grad_school_activities')
    op.drop_table('academic_fields')
    op.drop_table('roles')
    op.drop_table('researcher_titles')
    op.drop_table('project_call_types')
    op.drop_index(op.f('ix_people_email'), table_name='people')
    op.drop_table('people')
    op.drop_table('institutions')
    op.drop_table('grad_school_activity_types')
    op.drop_table('decision_letters')
    op.drop_table('course_terms')
    op.drop_table('academic_branches')
    # ### end Alembic commands ###
